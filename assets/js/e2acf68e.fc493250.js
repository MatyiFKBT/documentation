"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[119],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),g=u(n),d=a,h=g["".concat(s,".").concat(d)]||g[d]||p[d]||i;return n?r.createElement(h,o(o({ref:t},c),{},{components:n})):r.createElement(h,o({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=g;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var u=2;u<i;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},44774:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var r=n(87462),a=(n(67294),n(3905));const i={id:"using_with_gatsby",title:"Using with Gatsby",sidebar_label:"Using with Gatsby",slug:"/web/using_with_react/ssr/using_with_gatsby"},o=void 0,l={unversionedId:"web/using_with_react/ssr/using_with_gatsby",id:"web/using_with_react/ssr/using_with_gatsby",title:"Using with Gatsby",description:"To use Tolgee with Gatsby follow this Guide.",source:"@site/docs/web/using_with_react/ssr/using_with_gatsby.mdx",sourceDirName:"web/using_with_react/ssr",slug:"/web/using_with_react/ssr/using_with_gatsby",permalink:"/docs/web/using_with_react/ssr/using_with_gatsby",draft:!1,editUrl:"https://github.com/tolgee/documentation/tree/main/docs/web/using_with_react/ssr/using_with_gatsby.mdx",tags:[],version:"current",frontMatter:{id:"using_with_gatsby",title:"Using with Gatsby",sidebar_label:"Using with Gatsby",slug:"/web/using_with_react/ssr/using_with_gatsby"},sidebar:"someSidebar",previous:{title:"Using with Next.js",permalink:"/docs/web/using_with_react/ssr/using_with_next"},next:{title:"API",permalink:"/docs/web/using_with_react/api"}},s={},u=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Set up your environment.",id:"set-up-your-environment",level:2},{value:"Save exported data to project structure",id:"save-exported-data-to-project-structure",level:2},{value:"Use Intl extension",id:"use-intl-extension",level:2},{value:"Use TolgeeProvider",id:"use-tolgeeprovider",level:2},{value:"Change language with intl plugin",id:"change-language-with-intl-plugin",level:2}],c={toc:u};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"To use Tolgee with Gatsby follow this Guide."),(0,a.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Created Gatsby project with installed ",(0,a.kt)("inlineCode",{parentName:"li"},"@tolgee/react")," module"),(0,a.kt)("li",{parentName:"ol"},"Created project in Tolgee platform with 2 languages. In our case it is English (en) and Czech (cs)."),(0,a.kt)("li",{parentName:"ol"},"Added some localization key and translations for both languages. In our case the key name is ",(0,a.kt)("inlineCode",{parentName:"li"},"hello_world")),(0,a.kt)("li",{parentName:"ol"},"Generated API key for your project"),(0,a.kt)("li",{parentName:"ol"},"Exported data as zip of jsons")),(0,a.kt)("h2",{id:"set-up-your-environment"},"Set up your environment."),(0,a.kt)("p",null,"Create file (if not exists) ",(0,a.kt)("inlineCode",{parentName:"p"},".env.development")," and add this content to it."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"GATSBY_TOLGEE_API_KEY=<your api key>\nGATSBY_TOLGEE_API_URL=https://app.tolgee.io\n")),(0,a.kt)("p",null,"Then replace ",(0,a.kt)("inlineCode",{parentName:"p"},"<your api key>")," with your generated API key."),(0,a.kt)("h2",{id:"save-exported-data-to-project-structure"},"Save exported data to project structure"),(0,a.kt)("p",null,"Save exported json files to ",(0,a.kt)("inlineCode",{parentName:"p"},"src/i18n")," folder in your project structure."),(0,a.kt)("h2",{id:"use-intl-extension"},"Use Intl extension"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"npm install -D gatsby-plugin-react-intl\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="gatsby-config.js"',title:'"gatsby-config.js"'},"module.exports = {\n  plugins: [\n    {\n      resolve: `gatsby-plugin-react-intl`,\n      options: {\n        path: `${__dirname}/src/i18n`,\n        languages: [`en`, `cs`],\n        defaultLanguage: `en`,\n        redirect: true,\n      },\n    },\n  ],\n};\n\n")),(0,a.kt)("h2",{id:"use-tolgeeprovider"},"Use TolgeeProvider"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"import { useIntl } from 'gatsby-plugin-react-intl';\n\nexport const AppWrapper: React.FC = ({ children }) => {\n  const { locale, messages } = useIntl();\n\n  return (\n    <TolgeeProvider\n      forceLanguage={intl.locale}\n      apiKey={process.env.GATSBY_TOLGEE_API_KEY}\n      apiUrl={process.env.GATSBY_TOLGEE_API_URL}\n      staticData={{\n        en: () => import(`../i18n/en.json`),\n        cs: () => import('../i18n/cs.json'),\n        // translations provided by intl plugin\n        [locale]: messages,\n      }}\n      loadingFallback={<div>Loading...</div>}\n    >\n      {children}\n    </TolgeeProvider>\n  );\n};\n")),(0,a.kt)("p",null,"Intl plugin manages locale for us and also gives us content of localization file based on locale, which we provide\nstatically to Tolgee. On production Gatsby will generate pages separately for each locale, so only locale that is needed\nis provided statically."),(0,a.kt)("h2",{id:"change-language-with-intl-plugin"},"Change language with intl plugin"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"import { useCurrentLanguage } from '@tolgee/react';\nimport { changeLocale } from 'gatsby-plugin-react-intl';\n\nexport const LangSelector: React.FC = () => {\n  const getLang = useCurrentLanguage();\n\n  return (\n    <select\n      onChange={(e) => changeLocale(e.target.value)}\n      value={getLang()}\n    >\n      <option value=\"en\">\ud83c\uddec\ud83c\udde7 English</option>\n      <option value=\"cs\">\ud83c\udde8\ud83c\uddff \u010cesky</option>\n    </select>\n  );\n};\n")),(0,a.kt)("p",null,"You are done! Now you can translate your strings directly in your application, and enjoy the features of Gatsby in the same time!\nYou can find final application code in this repo: ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/tolgee/gatsby-example"},"github.com/tolgee/gatsby-example"),"."),(0,a.kt)("p",null,"Now you can use translation methods described ",(0,a.kt)("a",{parentName:"p",href:"../translating"},"here"),"."))}p.isMDXComponent=!0}}]);