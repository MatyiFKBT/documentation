"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[4728],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(n),g=o,m=d["".concat(s,".").concat(g)]||d[g]||u[g]||i;return n?r.createElement(m,a(a({ref:t},p),{},{components:n})):r.createElement(m,a({ref:t},p))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},12583:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=n(87462),o=(n(67294),n(3905));const i={id:"tolgee_js_version_4",title:"Tolgee JS v4"},a=void 0,l={unversionedId:"changelog/tolgee_js_version_4",id:"changelog/tolgee_js_version_4",title:"Tolgee JS v4",description:"Switching to invisible wrapper mode by default in integrations",source:"@site/docs/changelog/tolgee_js_version_4.mdx",sourceDirName:"changelog",slug:"/changelog/tolgee_js_version_4",permalink:"/docs/changelog/tolgee_js_version_4",draft:!1,editUrl:"https://github.com/tolgee/documentation/tree/main/docs/changelog/tolgee_js_version_4.mdx",tags:[],version:"current",frontMatter:{id:"tolgee_js_version_4",title:"Tolgee JS v4"},sidebar:"someSidebar",previous:{title:"ICU message format",permalink:"/docs/icu_message_format"},next:{title:"Tolgee JS v3",permalink:"/docs/changelog/tolgee_js_version_3"}},s={},c=[{value:"Switching to invisible wrapper mode by default in integrations",id:"switching-to-invisible-wrapper-mode-by-default-in-integrations",level:3},{value:"Removing wrapping <code>span</code> in T component",id:"removing-wrapping-span-in-t-component",level:3},{value:"Prop <code>defaultValue</code> in Vue and Svelte integrations",id:"prop-defaultvalue-in-vue-and-svelte-integrations",level:3}],p={toc:c};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h3",{id:"switching-to-invisible-wrapper-mode-by-default-in-integrations"},"Switching to invisible wrapper mode by default in integrations"),(0,o.kt)("p",null,"All tolgee integrations now use ",(0,o.kt)("inlineCode",{parentName:"p"},"wrapperMode: invisible")," as default."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/web/wrapping"},"Text wrapper mode")," is still available, you can switch to it manually."),(0,o.kt)("h3",{id:"removing-wrapping-span-in-t-component"},"Removing wrapping ",(0,o.kt)("inlineCode",{parentName:"h3"},"span")," in T component"),(0,o.kt)("p",null,"As invisible wrapper mode removes issues with wrapping, we can remove it now. T component will act very similarly as t function."),(0,o.kt)("h3",{id:"prop-defaultvalue-in-vue-and-svelte-integrations"},"Prop ",(0,o.kt)("inlineCode",{parentName:"h3"},"defaultValue")," in Vue and Svelte integrations"),(0,o.kt)("p",null,"Due to Vue and Svelte limitation to access children, which was causing issues, we decided to move it to props. It might be a bit less convenient, but the behavior should be more consistent."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'// before\n<T keyName="key_name">Default value</T>\n\n// after\n<T keyName="key_name" defaultValue="Default value" />\n')))}u.isMDXComponent=!0}}]);