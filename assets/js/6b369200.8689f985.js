"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[3338],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>m});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=a.createContext({}),u=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=u(e.components);return a.createElement(p.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},c=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),c=u(t),m=r,g=c["".concat(p,".").concat(m)]||c[m]||d[m]||o;return t?a.createElement(g,i(i({ref:n},s),{},{components:t})):a.createElement(g,i({ref:n},s))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=c;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var u=2;u<o;u++)i[u]=t[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},34984:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var a=t(87462),r=(t(67294),t(3905));const o={id:"api",title:"API",sidebar_label:"API",slug:"/web/using_with_vue/api"},i=void 0,l={unversionedId:"web/using_with_vue/api",id:"web/using_with_vue/api",title:"API",description:"TolgeeProvider",source:"@site/docs/web/using_with_vue/api.mdx",sourceDirName:"web/using_with_vue",slug:"/web/using_with_vue/api",permalink:"/docs/web/using_with_vue/api",draft:!1,editUrl:"https://github.com/tolgee/documentation/tree/main/docs/web/using_with_vue/api.mdx",tags:[],version:"current",frontMatter:{id:"api",title:"API",sidebar_label:"API",slug:"/web/using_with_vue/api"},sidebar:"someSidebar",previous:{title:"Preparing for production",permalink:"/docs/web/using_with_vue/preparing_for_production"},next:{title:"Installation",permalink:"/docs/web/using_with_svelte/installation"}},p={},u=[{value:"TolgeeProvider",id:"tolgeeprovider",level:2},{value:"Prop <code>config</code>",id:"prop-config",level:4},{value:"Prop <code>loadingFallback?</code>",id:"prop-loadingfallback",level:4},{value:"Slot <code>fallback</code>",id:"slot-fallback",level:4},{value:"T component",id:"t-component",level:2},{value:"Prop <code>keyName</code>",id:"prop-keyname",level:4},{value:"Prop <code>parameters?</code>",id:"prop-parameters",level:4},{value:"Prop <code>noWrap?</code>",id:"prop-nowrap",level:4},{value:"Prop <code>defaultValue?</code>",id:"prop-defaultvalue",level:4},{value:"Composition API",id:"composition-api",level:2},{value:"<code>useTranslate</code> with function <code>t</code>",id:"usetranslate-with-function-t",level:3},{value:"<code>useLanguage</code>",id:"uselanguage",level:3},{value:"TolgeeMixin",id:"tolgeemixin",level:2},{value:"Function <code>$t</code>",id:"function-t",level:3},{value:"Parameter <code>key</code>",id:"parameter-key",level:4},{value:"Parameter <code>parameters?</code>",id:"parameter-parameters",level:4},{value:"Parameter <code>noWrap?</code>",id:"parameter-nowrap",level:4},{value:"Parameter <code>defaultValue?</code>",id:"parameter-defaultvalue",level:4},{value:"Property <code>tolgeeLanguage</code>",id:"property-tolgeelanguage",level:3}],s={toc:u};function d(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"tolgeeprovider"},"TolgeeProvider"),(0,r.kt)("p",null,"Provides Tolgee context. Use in root of your application."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"import { TolgeeProvider } from '@tolgee/vue';\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<TolgeeProvider config="...">\n  ... content ...\n</TolgeeProvider>\n')),(0,r.kt)("h4",{id:"prop-config"},"Prop ",(0,r.kt)("inlineCode",{parentName:"h4"},"config")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"../configuration"},(0,r.kt)("inlineCode",{parentName:"a"},"TolgeeConfiguration"))," object, which is passed to Tolgee instance."),(0,r.kt)("h4",{id:"prop-loadingfallback"},"Prop ",(0,r.kt)("inlineCode",{parentName:"h4"},"loadingFallback?")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"String | JSX.Element")," - it is rendered when Tolgee is loading translations instead of provided content.\nYou can pass custom loading element when using Vue with JSX."),(0,r.kt)("h4",{id:"slot-fallback"},"Slot ",(0,r.kt)("inlineCode",{parentName:"h4"},"fallback")),(0,r.kt)("p",null,"Alternative for ",(0,r.kt)("inlineCode",{parentName:"p"},"loadingFallback")," use when you are using Vue with templates:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<TolgeeProvider :config="config">\n  <App />\n  <template v-slot:fallback>\n    <div>Loading...</div>\n  </template>\n</TolgeeProvider>\n')),(0,r.kt)("h2",{id:"t-component"},"T component"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"import { T } from '@tolgee/vue';\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<T keyName="..." :parameters="{ param: \'...\' }" />\n')),(0,r.kt)("h4",{id:"prop-keyname"},"Prop ",(0,r.kt)("inlineCode",{parentName:"h4"},"keyName")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"String")," - translation key."),(0,r.kt)("h4",{id:"prop-parameters"},"Prop ",(0,r.kt)("inlineCode",{parentName:"h4"},"parameters?")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Record<string, string>")," - variable parameters, which can be used in translation value\n(read more about ",(0,r.kt)("a",{parentName:"p",href:"../../icu_message_format"},"ICU message format"),")."),(0,r.kt)("h4",{id:"prop-nowrap"},"Prop ",(0,r.kt)("inlineCode",{parentName:"h4"},"noWrap?")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Boolean")," (default: ",(0,r.kt)("inlineCode",{parentName:"p"},"false"),")"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"false")," - in development mode translation will be ",(0,r.kt)("a",{parentName:"li",href:"../wrapping"},"wrapped")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"true")," - use when wrapping in dev mode causes problems, in this case in-context translation won't work")),(0,r.kt)("h4",{id:"prop-defaultvalue"},"Prop ",(0,r.kt)("inlineCode",{parentName:"h4"},"defaultValue?")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"String")," - You can pass default value, which will be rendered if there is no translation\nfor this key (in selected language nor base language). If you won't provide this value, ",(0,r.kt)("inlineCode",{parentName:"p"},"keyName")," will be rendered instead."),(0,r.kt)("h2",{id:"composition-api"},"Composition API"),(0,r.kt)("h3",{id:"usetranslate-with-function-t"},(0,r.kt)("inlineCode",{parentName:"h3"},"useTranslate")," with function ",(0,r.kt)("inlineCode",{parentName:"h3"},"t")),(0,r.kt)("p",null,"This composition function returns reactive function for translating in template."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"<template>\n  {{ t('example_key', 'Default value') }}\n</template>\n\n<script>\n  export default {\n    setup() {\n      const t = useTranslate();\n      return { t };\n    }\n  }\n<\/script>\n")),(0,r.kt)("p",null,"Function ",(0,r.kt)("inlineCode",{parentName:"p"},"t")," has following interface:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"function t(\n  key: string, \n  parameters: Record<string, string>,\n  noWrap?: boolean,\n  defaultValue?: string\n): string\n\n// or with options object\nfunction t(options: {\n  key: string;\n  parameters?: Record<string, string>;\n  noWrap?: boolean;\n  defaultValue?: string;\n}): string\n")),(0,r.kt)("h3",{id:"uselanguage"},(0,r.kt)("inlineCode",{parentName:"h3"},"useLanguage")),(0,r.kt)("p",null,"Returns reactive ",(0,r.kt)("inlineCode",{parentName:"p"},"language"),", which you can use for language switching."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'<select v-model="language">\n  ... languages ...\n</select>\n\n<script>\n  export default {\n    setup() {\n      const language = useLanguage();\n      return { language };\n    }\n  }\n<\/script>\n')),(0,r.kt)("h2",{id:"tolgeemixin"},"TolgeeMixin"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"We recommend using composition API instead of mixin, as it is more modern and cleaner approach.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import { TolgeeMixin } from '@tolgee/vue';\n")),(0,r.kt)("h3",{id:"function-t"},"Function ",(0,r.kt)("inlineCode",{parentName:"h3"},"$t")),(0,r.kt)("p",null,"Returns requested translation and also subscribes component to translation/language changes,\nso component will be re-rendered every time translation changes."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"function $t(\n  key: string, \n  parameters: Record<string, string>,\n  noWrap?: boolean,\n  defaultValue?: string\n): string\n\n// or with options object\nfunction $t(options: {\n  key: string;\n  parameters?: Record<string, string>;\n  noWrap?: boolean;\n  defaultValue?: string;\n}): string\n")),(0,r.kt)("h4",{id:"parameter-key"},"Parameter ",(0,r.kt)("inlineCode",{parentName:"h4"},"key")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"String")," - translation key."),(0,r.kt)("h4",{id:"parameter-parameters"},"Parameter ",(0,r.kt)("inlineCode",{parentName:"h4"},"parameters?")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Record<string, string>")," - variable parameters, which can be used in translation value\n(read more about ",(0,r.kt)("a",{parentName:"p",href:"../../icu_message_format"},"ICU message format"),")."),(0,r.kt)("h4",{id:"parameter-nowrap"},"Parameter ",(0,r.kt)("inlineCode",{parentName:"h4"},"noWrap?")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Boolean")," (default: ",(0,r.kt)("inlineCode",{parentName:"p"},"false"),")"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"false")," - in development mode translation will be ",(0,r.kt)("a",{parentName:"li",href:"../wrapping"},"wrapped")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"true")," - use when wrapping in dev mode causes problems, or you pass write it outside the DOM\n(for example ",(0,r.kt)("inlineCode",{parentName:"li"},"document.title"),"), in this case in-context translation won't work")),(0,r.kt)("h4",{id:"parameter-defaultvalue"},"Parameter ",(0,r.kt)("inlineCode",{parentName:"h4"},"defaultValue?")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"String")," - It will be rendered if there is no translation for this key (in selected language nor base language).\nIf you won't provide this value, ",(0,r.kt)("inlineCode",{parentName:"p"},"key")," will be rendered instead."),(0,r.kt)("h3",{id:"property-tolgeelanguage"},"Property ",(0,r.kt)("inlineCode",{parentName:"h3"},"tolgeeLanguage")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"String")," - Reactive property, which contains current Tolgee language. Use it for reading or setting current language."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<select v-model="tolgeeLanguage">\n  ... languages ...\n</select>\n')))}d.isMDXComponent=!0}}]);