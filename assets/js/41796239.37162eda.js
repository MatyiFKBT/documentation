"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[1765],{43335:(e,t,a)=>{a.d(t,{t:()=>i});var n=a(87462),o=a(67294),r=a(86010);function i(e){let{children:t,as:a,...i}=e;const s=a||"span";return o.createElement(s,(0,n.Z)({},i,{className:(0,r.Z)("text-gradient",i.className)}),t)}},2664:(e,t,a)=>{a.d(t,{m:()=>r});var n=a(67294),o=a(86010);const r=e=>n.createElement("header",{className:(0,o.Z)("header flex flex-col items-center justify-center mx-3 sm:mx-4",!e.noPadding&&"pt-[180px] sm:pt-[220px]",e.className)}," ",e.children)},89099:(e,t,a)=>{a.d(t,{D:()=>r});var n=a(67294),o=a(86010);const r=e=>n.createElement("h1",{className:(0,o.Z)("text-2xl text-home-text font-[600] mb-0",e.className)},e.children)},85398:(e,t,a)=>{a.d(t,{B:()=>i});var n=a(67294),o=a(86010),r=a(43335);const i=e=>n.createElement("h1",{className:(0,o.Z)("header__title text-center",e.className)},e.active?n.createElement(r.t,null,e.children):e.children)},60233:(e,t,a)=>{a.r(t),a.d(t,{default:()=>p});var n=a(67294),o=a(15852),r=a(2664),i=a(85398),s=a(89099);const l={"2022/Q4":{future:!1,active:!0,items:[{name:"CLI",description:n.createElement("p",null,"Command Line Interface will help users with extracting localization data from the Tolgee platform, analyzing code, looking for new keys, and extracting data in specific formats. Everything mentioned is customizable and flexible!")},{name:"Permission enhancements",description:n.createElement("p",null,"Currently, the permissions are level oriented. You can have MANAGE permission, which enables you to do everything in the project, or EDIT which enables you to manage keys, translations, or screenshots. But what if you want to enable a specific user to only add screenshots? With enhanced permissions users will be able to set granular permissions for each scope like uploading screenshots, adding a key, modifying translations, you name it.")},{name:"New Core of Tolgee JS",description:n.createElement("p",null,"The new @tolgee/core package will provide refactored core of all js integrations and cleaner API with enhanced customization reduced bundle size and new features.")},{name:"Community translations",description:n.createElement("p",null,"Tolgee is currently used by many open source projects, but Tolgee doesn't support a safe way of community translating. It can limit translation permissions to specific users, but the user can then modify all the strings in the language. We need to provide a better way, where the community members would be able to only propose changes, which have to be approved and merged by somebody who is permitted to.")},{name:"Webhooks",description:n.createElement("p",null,"With webhooks, developers would be able to create their custom automation when project data change without periodically calling the REST API. They will be notified by specific events automatically!")},{name:"Batch operations",description:n.createElement("p",null,"Select as many keys as you want and then tag them, find and replace in them, auto-translate, or change their state.")},{name:"Namespaces in Tolgee JS integrations",description:n.createElement("p",null,"Enable localization data export to be split to multiple files not only by the language but also by their namespace.")}]},"2023/Q1-Q2":{active:!1,future:!0,items:[{name:"All format support",description:n.createElement("p",null,"Tolgee currently works fine with ICU message format and you can import data in .po format. However, there are many more formats we want to support. In this task, we would like to create a universal solution for format support, so we will be able to support any format in the future.")},{name:"Visual editor",description:n.createElement(n.Fragment,null,n.createElement("p",null,"The current editor helps you with ICU syntax but doesn't help you with placeholders or HTML tags. For many, this is not an issue but it's problematic for example in the Arabic language, where it's hard to mix HTML and Arabic characters."),n.createElement("p",null,"By visual editor, we mean a nice environment, where tags and parameter placeholders are represented visually, so translators don't have to worry about them. The plurals are also visually represented, so users can edit them without understanding the message formatting language."))},{name:"Translator Marketplace",description:n.createElement("p",null,"Looking for a translator to access foreign markets? Tolgee will help you with this. With the Tolgee Translator Marketplace, there will be nothing easier than finding the ideal professional translator for your app.")},{name:"Branching",description:n.createElement("p",null,"Sometimes you need to maintain multiple versions of your software, so you\u2019ll need to have multiple versions of your localization data stored in Tolgee as well.")},{name:"Git integrations",description:n.createElement(n.Fragment,null,n.createElement("p",null,"There are times when it would be great if localization data were synced with your Git repository. Or maybe you would like to create pull requests automatically when translations are changed..."),n.createElement("p",null,"To do this, integrations to ",n.createElement("b",null,"GitHub, GitLab"),", or just support for Git itself will be helpful."))},{name:"Backups and data export",description:n.createElement("p",null,"For our subscribers, we would like to provide an automated backups feature, which will enable users to restore their project data to a specific state when something goes wrong. Users will be also able to export all project data including metadata and screenshots and import them later.")},{name:"Notifications",description:n.createElement("p",null,"When something changes in your project, users will be notified, if enabled. So you can get your strings translated asap.")},{name:"CDN",description:n.createElement("p",null,"Tolgee will automatically upload the exported localization data after every change, so your translations will be always up to date. You will be also able to configure your S3-compatible bucket, so the data stay with you.")}]},"2023/Q3-Q4":{active:!1,future:!0,items:[{name:"Glossaries",description:n.createElement("p",null,"To translate the same terms the same way every time, you need to store the terminology to reuse it in the future. Glossaries are the feature that enables you to do that.")},{name:"Design tools integrations",description:"With Tolgee, developers and translators can translate apps very easily. We \nwould also like to provide translators with simplicity by enabling them to \ntranslate texts directly in tools like <b>Figma, XD, or Miro</b>."},{name:"In-context support for mobile apps",description:n.createElement("p",null,"The in-context translating works great with web apps, and we would like to provide the same comfort to mobile developers.")},{name:"QA Checks",description:n.createElement("p",null,"Even translators make mistakes, but some of these mistakes can be detected, and translators can be notified. No more mistakes like missing tags, missing parameters, or missing punctuation marks.")}]},"2021/Q3-Q4":{items:[{name:"V1 Release",description:"After a year and a half of development, we\u2019ve decided to finally release the \nfirst official and stable version of Tolgee. Tolgee is now tested and stable, so \nit's time to celebrate. \ud83c\udf89\ud83c\udf89\ud83c\udf89",done:!0},{name:"Start to promote Tolgee",description:"Until now, we have been working hard to come up with a product that will \nsatisfy most of the needs of our users. Since Tolgee is now production-ready, \nand we are going to promote it hard!",done:!0},{name:"Clean and improve UI",description:"Before we released Tolgee V1, we wanted to clean up the UI since we wanted \n        our users to have a great user experience.",done:!0},{name:"Automatic screenshot generation",description:"Context is the most important thing for translators to do their job correctly. \nWe wanted to enable software developers to provide the context to translators\nwithout wasting their time. With Tolgee JS SDK and Tolgee Chrome plugin, \ndevelopers are able to generate screenshots automatically while creating the \nkey in the in-context translation UI.",done:!0}]},"2022/Q1":{items:[{name:"Translation memory",description:"Translation memory will suggest sentences that will have already been \ntranslated in your projects before.",inProgressLink:"https://github.com/tolgee/server/pull/920",done:!0},{name:"Automated/Machine translations",description:"Don't translate everything manually. With an automated translations feature, \nservices like DeepL, Google Translate, or AWS translate will help by suggesting or \ntranslating your new keys automatically when enabled.",inProgressLink:"https://github.com/tolgee/server/pull/920",done:!0},{name:"Translating on production",description:"Currently, in-context localization works only when the application is in development mode which is cool, but we would like\n         to enable users to translate directly in the deployed app by providing API key using the Tolgee Tools Chrome plugin.",inProgressLink:"https://github.com/tolgee/tolgee-js/pull/1775",done:!0},{name:"More export options",description:"More formats (json, xliff) and export options like filtering or structuring will be provided, so exports will be more versatile.",done:!0}]},"2022/Q2-Q3":{active:!1,future:!1,items:[{name:"Project Dashboard",description:"To see detailed statistics for the project and for each language.",inProgressLink:"https://github.com/tolgee/server/issues/915",done:!0},{name:"Translation history",description:"Enable users to see, how translation was edited in the past.",inProgressLink:"https://github.com/tolgee/server/issues/1001",done:!0},{name:"Translation permissions limited by language",description:"Add an option specifying a particular language a user can translate to.",inProgressLink:"https://github.com/tolgee/server/pull/991",done:!0},{name:"Billing on Tolgee Cloud",description:"To generate some profit from providing this great localization tool, we need to\nenable our users to pay for our services. To do so, we have to implement backend services and UI to bill for our services.\nIf you are self-hosting Tolgee, don't worry. Tolgee stays free for you.",done:!0}]}},c=Object.entries(l).filter((e=>!e[1].active&&!e[1].future)).reduce(((e,t)=>{let[a,n]=t;return{...e,[a]:n}}),{}),m=Object.entries(l).filter((e=>e[1].active)).reduce(((e,t)=>{let[a,n]=t;return{...e,[a]:n}}),{}),d=Object.entries(l).filter((e=>e[1].future)).reduce(((e,t)=>{let[a,n]=t;return{...e,[a]:n}}),{});function p(){return n.createElement("div",null,n.createElement(o.Z,{title:"Roadmap"},n.createElement(r.m,{className:"mb-[220px]"},n.createElement(s.D,null,"Roadmap"),n.createElement(i.B,{active:!0},"We are on it.")),n.createElement("div",{className:"container roadmap__container"},n.createElement("div",{className:"roadmap__items-wrapper"},[m,d,c].map(((e,t)=>n.createElement(n.Fragment,{key:t},e==c&&n.createElement("h2",{className:"roadmap-period__passed-divider"},"What have we done so far..."),Object.entries(e).map(((e,t)=>{let[a,o]=e;return n.createElement("section",{key:t,className:"roadmap-period__section"},n.createElement("h2",{className:"roadmap-period__title"},a),n.createElement("div",{className:"roadmap-period__items"},o.items.map(((e,t)=>n.createElement("div",{key:t,className:"roadmap-item "+(e.done?"roadmap-item--done":"")},n.createElement("h3",null,e.name,n.createElement(u,{done:e.done,link:e.inProgressLink})),e.description&&(Array.isArray(e.description)?e.description:[e.description]).map(((e,t)=>"string"==typeof e?n.createElement("p",{dangerouslySetInnerHTML:{__html:e}}):n.createElement(n.Fragment,{key:t},e))))))))})))))))))}const u=e=>e.link&&!e.done?n.createElement(n.Fragment,null," ",n.createElement("a",{href:e.link},"(In progress)")):null},15852:(e,t,a)=>{a.d(t,{Z:()=>l});var n=a(87462),o=a(67294),r=a(81517),i=a(95584),s=a(86010);function l(e){const[t,a]=(0,o.useState)(!1);(0,o.useEffect)((()=>{const e=()=>{a(document.body.parentElement.scrollTop>100)};return e(),document.addEventListener("scroll",e),()=>{document.removeEventListener("scroll",e)}}),[]);const l=t?"page-with-decoration--scrolled":"page-with-decoration--not-scrolled";return o.createElement(o.Fragment,null,o.createElement(i.Z,(0,n.Z)({},e,{wrapperClassName:"page-with-decoration--content",wholePageWrapperClassName:(0,s.Z)("page-with-decoration",l)}),o.createElement("div",{className:"page-decoration"}),o.createElement("div",{className:"page-with-decoration--content-inner"},e.children)),o.createElement(r.G,null))}}}]);