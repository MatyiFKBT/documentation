"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[6771],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var o=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=o.createContext({}),p=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return o.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},h=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),h=p(n),d=a,g=h["".concat(s,".").concat(d)]||h[d]||c[d]||r;return n?o.createElement(g,i(i({ref:t},u),{},{components:n})):o.createElement(g,i({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var p=2;p<r;p++)i[p]=n[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}h.displayName="MDXCreateElement"},53710:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var o=n(87462),a=(n(67294),n(3905));const r={slug:"why-you-should-prepare-your-project-for-localization-right-now",title:"\ud83c\udf0e Why you should prepare your project for localization (i18n) right now",description:"Three main reasons why it is good to prepare you app for localization (i18n) in advance and integrate localization as soon as possible.",authors:["jcizmar"],tags:["webdev","javascript"]},i=void 0,l={permalink:"/blog/why-you-should-prepare-your-project-for-localization-right-now",editUrl:"https://github.com/tolgee/documentation/tree/main/blog/2021-12-06-why-you-should-prepare-your-project-for-localization-right-now.md",source:"@site/blog/2021-12-06-why-you-should-prepare-your-project-for-localization-right-now.md",title:"\ud83c\udf0e Why you should prepare your project for localization (i18n) right now",description:"Three main reasons why it is good to prepare you app for localization (i18n) in advance and integrate localization as soon as possible.",date:"2021-12-06T00:00:00.000Z",formattedDate:"December 6, 2021",tags:[{label:"webdev",permalink:"/blog/tags/webdev"},{label:"javascript",permalink:"/blog/tags/javascript"}],readingTime:3.685,hasTruncateMarker:!0,authors:[{name:"Jan Cizmar \ud83d\ude0e",title:"Founder & Full-stack Architect",url:"https://github.com/JanCizmar",imageURL:"https://avatars.githubusercontent.com/u/18496315?v=4",key:"jcizmar"}],frontMatter:{slug:"why-you-should-prepare-your-project-for-localization-right-now",title:"\ud83c\udf0e Why you should prepare your project for localization (i18n) right now",description:"Three main reasons why it is good to prepare you app for localization (i18n) in advance and integrate localization as soon as possible.",authors:["jcizmar"],tags:["webdev","javascript"]},prevItem:{title:"Using invisible text for better localization",permalink:"/blog/2021/12/17/invisible-characters-for-better-localization"},nextItem:{title:"Same logic in 4 major FE frameworks, how do they compare?",permalink:"/blog/2021/11/29/same-logic-in-4-frameworks"}},s={authorsImageUrls:[void 0]},p=[{value:"It&#39;s boring and repetitive task \u231b\ud83d\udd04",id:"its-boring-and-repetitive-task-",level:2},{value:"Missing strings \ud83c\udfaf",id:"missing-strings-",level:2},{value:"Losing context",id:"losing-context",level:2},{value:"How can you do better?",id:"how-can-you-do-better",level:2},{value:"How can Tolgee \ud83d\udc01 help?",id:"how-can-tolgee--help",level:3},{value:"TL; DR",id:"tl-dr",level:2}],u={toc:p};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"We always recommend preparing projects for localization as soon as possible. A lot of people, we are talking\nwith, say that they are in early stage of development of their app and localization \ud83c\udf0e is something they don't need\nright now."),(0,a.kt)("p",null,"Setting ",(0,a.kt)("a",{parentName:"p",href:"/blog/localization-basics-S01E01"},"localization")," aside is not a good idea, and I am going to tell you why."),(0,a.kt)("h2",{id:"its-boring-and-repetitive-task-"},"It's boring and repetitive task \u231b\ud83d\udd04"),(0,a.kt)("p",null,"When localizing your application with a lot of strings already in code, the localization is going to be very painful \ud83e\ude78\ntask. In that case you will have to go through all your code and wrap all the strings in the code with some component or\nmethod, depending on language or framework you use. This could be hundreds or thousands of strings to wrap and\nlocalization keys to come up with."),(0,a.kt)("p",null,"See this example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},"<h1>My beautiful App</h1>\n\n<button>Like it!</button>\n")),(0,a.kt)("p",null,"We have a tiny little app with a headline and button, whatever the button does, it has a text in it. It has a text to be\ntranslated! \ud83d\ude0e To translate it we have to transform it to something like this."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},'\n<h1>\n  <T key="my-app-headline">My beautiful App</T>\n</h1>\n\n<button>\n  <T key="button-like">Like</T>\n</button>\n')),(0,a.kt)("p",null,"Think of the ",(0,a.kt)("inlineCode",{parentName:"p"},"T")," element as something which is replacing the text with translated value when language changes."),(0,a.kt)("p",null,"Now imagine, you have a code with thousands of strings like this you have to go through and wrap every text with this\nkind of code. It's very hard to do something like this with find & replace tool, since you have to come up with the nice\nsemantic key."),(0,a.kt)("h2",{id:"missing-strings-"},"Missing strings \ud83c\udfaf"),(0,a.kt)("p",null,"Going through your codebase and replacing all the strings is not that easy as it seems, there could be translations in\nthe element content, in the attributes, it could be generated by the logic and provided though variables or function\ncalls."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},'<h1 id="headline"></h1>\n<script>\n  const headline = document.getElementById("headline");\n  if (isTheAppCool) {\n    headline.textContent = "My cool App"\n  } else {\n    headline.textContent = "My App"\n  }\n<\/script>\n')),(0,a.kt)("p",null,"What now? \ud83d\ude48 While this code is provided in the script part, it's very simple to miss it and provide imperfect\nexperience to your users."),(0,a.kt)("h2",{id:"losing-context"},"Losing context"),(0,a.kt)("p",null,"When translating the application to different languages, you'll probably reach a point, when you would like translators\nto translate your app. So you take localization data from your app and send them to translators. Then you expect perfect\nresults, since you don't understand the foreign language. That's the reason, why you pay for translator, isn't it?"),(0,a.kt)("p",null,"So you will provide file like this."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="en.json"',title:'"en.json"'},'{\n  "my-app-headline": "My beautiful App",\n  "button-like": "Like"\n}\n')),(0,a.kt)("p",null,"But the translator don't have any ",(0,a.kt)("a",{parentName:"p",href:"/features/dev-tools"},"context")," information about the texts. Where is it on the page? What's the purpose of the\nbutton? What is the gender of the objects? Is this noun or verb?"),(0,a.kt)("h2",{id:"how-can-you-do-better"},"How can you do better?"),(0,a.kt)("p",null,"Simple. Just integrate localization as soon as possible. From the beginning prepare your app to be localized. As a\nTolgee founder I would recommend you to use out solution \ud83d\ude01, but you can use any other library suitable for your\nframework or language."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"React: ",(0,a.kt)("inlineCode",{parentName:"li"},"react-intl"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"react-i18next")," or ",(0,a.kt)("a",{parentName:"li",href:"/integrations/react"},(0,a.kt)("inlineCode",{parentName:"a"},"@tolgee/react"))),(0,a.kt)("li",{parentName:"ul"},"Vue: ",(0,a.kt)("inlineCode",{parentName:"li"},"vue-i18next"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"vue-intl")," or ",(0,a.kt)("a",{parentName:"li",href:"/integrations/vue"},(0,a.kt)("inlineCode",{parentName:"a"},"@tolgee/vue"))),(0,a.kt)("li",{parentName:"ul"},"Angular: ",(0,a.kt)("inlineCode",{parentName:"li"},"@angular/localize")," (native), ",(0,a.kt)("inlineCode",{parentName:"li"},"angular-i18next"),", ",(0,a.kt)("a",{parentName:"li",href:"/integrations/angular"},(0,a.kt)("inlineCode",{parentName:"a"},"@tolgee/angular"))),(0,a.kt)("li",{parentName:"ul"},"Svelte: ",(0,a.kt)("inlineCode",{parentName:"li"},"svelte-i18n"),", ",(0,a.kt)("a",{parentName:"li",href:"/integrations/svelte"},(0,a.kt)("inlineCode",{parentName:"a"},"@tolgee/svelte")))),(0,a.kt)("p",null,"While using those tools, try to also store context of the keys in form of comments or screenshots, which you can provide\nto translators in the future."),(0,a.kt)("h3",{id:"how-can-tolgee--help"},"How can Tolgee \ud83d\udc01 help?"),(0,a.kt)("p",null,"Preparing your app to be localized is always good idea and with Tolgee you can do it without much time cost, since your\nonly task is to wrap the string with T component come up with a nice translation key. Then you can just go to your app\nand translate your string with ",(0,a.kt)("inlineCode",{parentName:"p"},"ALT + Click"),". You can also automatically generate a screenshot from your App to provide\nthe context to your future translators. If you would like to learn more about it,\ncheck ",(0,a.kt)("a",{parentName:"p",href:"/docs"},"our documentation \ud83d\udcda")," or choose an integration library above and follow the tutorials. \ud83d\udcd6 "),(0,a.kt)("h2",{id:"tl-dr"},"TL; DR"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Prepare your app for localization now \ud83d\ude0e"),(0,a.kt)("li",{parentName:"ul"},"You'll avoid untranslated texts \ud83e\udd73"),(0,a.kt)("li",{parentName:"ul"},"Your page will be translated correctly \u2705"),(0,a.kt)("li",{parentName:"ul"},"You will not die due to bore of the repetitive replacing your strings \u26b0\ufe0f\u26b1\ufe0f")),(0,a.kt)("p",null,"If you like what we do, please star our GitHub projects. \ud83d\ude4f"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/tolgee/server"},"Tolgee Platform")," \u2b50"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/tolgee/tolgee-js"},"Tolgee JS")," \u2b50")))}c.isMDXComponent=!0}}]);