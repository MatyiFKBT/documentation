"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[4479],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,g=u["".concat(s,".").concat(m)]||u[m]||c[m]||i;return n?a.createElement(g,o(o({ref:t},d),{},{components:n})):a.createElement(g,o({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},22330:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const i={id:"translating_imperatively",title:"Translating imperatively",sidebar_label:"Translating imperatively",slug:"/web/get_started/translating_imperatively"},o=void 0,l={unversionedId:"web/get_started/translating_imperatively",id:"web/get_started/translating_imperatively",title:"Translating imperatively",description:"There are occurrences of texts to translate that can appear outside the DOM subtree handled by Tolgee or as visible properties",source:"@site/docs/web/get_started/translating_imperatively.mdx",sourceDirName:"web/get_started",slug:"/web/get_started/translating_imperatively",permalink:"/docs/web/get_started/translating_imperatively",draft:!1,editUrl:"https://github.com/tolgee/documentation/tree/main/docs/web/get_started/translating_imperatively.mdx",tags:[],version:"current",frontMatter:{id:"translating_imperatively",title:"Translating imperatively",sidebar_label:"Translating imperatively",slug:"/web/get_started/translating_imperatively"},sidebar:"someSidebar",previous:{title:"Adding loading overlay",permalink:"/docs/web/get_started/adding_loading_overlay"},next:{title:"Providing default",permalink:"/docs/web/get_started/providing_default_value"}},s={},p=[{value:"<code>translate</code> method",id:"translate-method",level:3},{value:"<code>instant</code> method",id:"instant-method",level:3}],d={toc:p};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"There are occurrences of texts to translate that can appear outside the DOM subtree handled by Tolgee or as visible properties\nof DOM objects such as value of ",(0,r.kt)("inlineCode",{parentName:"p"},"<input>")," element or document title.\nTolgee won't translate them automatically. (Hopefully in future versions)"),(0,r.kt)("p",null,"There is a certain way how to deal with these."),(0,r.kt)("p",null,"In our ",(0,r.kt)("a",{parentName:"p",href:"/docs/web/get_started/hello_world"},"Hello world example")," there is a title element which is not translated. We can translate it\nby adding this code snipped to our javascript part of the document:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'tg.onLangLoaded.subscribe(() => {\n    document.title = tg.instant("hello_world", undefined, true);\n});\n')),(0,r.kt)("p",null,"Getter ",(0,r.kt)("inlineCode",{parentName:"p"},"tg.onLangLoaded")," returns an instance of EventEmitter. The callback of subscribe method is called every time\nlanguage changes and Tolgee loads its translations. So after that, we can call ",(0,r.kt)("inlineCode",{parentName:"p"},"tg.instant"),", what returns the\ntranslations from already loaded translations. First parameter of this method is the translation ",(0,r.kt)("strong",{parentName:"p"},"key"),' in our case "hello_world".\nSecond parameter is object of translation parameters (see ',(0,r.kt)("a",{parentName:"p",href:"parameter_interpolation"},"parameter interpolation"),").\nThe last parameter ",(0,r.kt)("inlineCode",{parentName:"p"},"noWrap")," tells Tolgee not to wrap it with inputPrefix and inputSuffix values. In general, it\nmeans that Tolgee will return the translated value instead of wrapped value like ",(0,r.kt)("inlineCode",{parentName:"p"},"{{hello_world}}"),". This is useful\nfor occurrences where it is impossible to click on the translated element or where Tolgee could not find the value by\ninspecting DOM (see ",(0,r.kt)("a",{parentName:"p",href:"../wrapping"},"Wrapping"),")."),(0,r.kt)("admonition",{type:"important"},(0,r.kt)("p",{parentName:"admonition"},"If you can see wrapped text on rendered page such as ",(0,r.kt)("inlineCode",{parentName:"p"},"{{something}}")," or",(0,r.kt)("br",null),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"%-%tolgee:something%-%")," you should probably try\nto translate it imperatively with ",(0,r.kt)("inlineCode",{parentName:"p"},"noWrap")," parameter set to ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," like:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'tg.instant("something", undefined, true)\n')),(0,r.kt)("p",{parentName:"admonition"},"or"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'tg.translate("something", undefined, true).then(translation => {})\n')),(0,r.kt)("p",{parentName:"admonition"},"This way, you'll get unwrapped translation value and you can manually place it wherever you need.")),(0,r.kt)("p",null,"Full HTML example page is here:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <title>hello world</title>\n</head>\n<body>\n    <div id="loading" style="\n        position: fixed;\n        top:0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background-color: white;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    ">\n    Loading...\n    </div>\n    <h1>{{hello_world}}</h1>\n</body>\n<script src="https://unpkg.com/@tolgee/core"><\/script>\n<script src="https://unpkg.com/@tolgee/ui"><\/script>\n<script>\nconst { Tolgee, IcuFormatter } = window["@tolgee/core"]\nconst tg = Tolgee.use(IcuFormatter).init({\n    apiUrl: "https://app.tolgee.io",\n    apiKey: "you_secret_api_key",\n    inputPrefix: "{{",\n    inputSuffix: "}}",\n    watch: true,\n    ui: window["@tolgee/ui"].UI,\n});\n\ntg.run().then(() => {\n    document.getElementById("loading").style.display = "none";\n})\ntg.onLangLoaded.subscribe(() => {\n    document.title = tg.instant("hello_world", undefined, true);\n});\n\n<\/script>\n</html>\n')),(0,r.kt)("h3",{id:"translate-method"},(0,r.kt)("inlineCode",{parentName:"h3"},"translate")," method"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Tolgee.translate")," method returns your translation asynchronously and returns Promise. In general it is more secure to use it.\nInstant method can return untranslated key when translations are not loaded yet."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'tg.translate("hello_world", undefined).then(t => {document.body.innerText = t});\n')),(0,r.kt)("h3",{id:"instant-method"},(0,r.kt)("inlineCode",{parentName:"h3"},"instant")," method"),(0,r.kt)("p",null,"On the other hand ",(0,r.kt)("inlineCode",{parentName:"p"},"tg.instant")," method returns translation immediately. However, if translations are not loaded yet, it returns\nuntranslated localization key."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'const translation = tg.instant("hello_world");\n')))}c.isMDXComponent=!0}}]);